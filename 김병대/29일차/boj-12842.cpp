// g++ .\main.cpp -o {실행파일명}
#include <iostream>
#include <algorithm>
#include <climits>
#include <string>
#include <string.h>
#include <set>
#include <map>
#include <math.h>
#include <unordered_set>
#include <unordered_map>
#include <vector>
#include <tuple>

typedef long long ll;
using namespace std;

int main() {
    ios::sync_with_stdio(0);
    cin.tie(NULL);

    int n, s;
    cin >> n >> s;
    int rem = n - s; // 이 빵 갯수만 신경 쓰면 된다.
    int m;
    cin >> m;
    int A[m + 1] = {0};
    for(int i = 1; i <= m; i++) cin >> A[i];

    int t = 1;
    int last = min(rem, m); // 아무도 다 안먹었는데 0초만에 집어들자마자 끝난 경우?
    rem -= m;
    while(rem > 0) {
        for(int i = 1; i <= m; i++) {
            if(t % A[i] == 0) { // i번 사람이 소보루를 다먹고 빵을 집었음
                if(--rem == 0) {  // 빵을 집었는데 막타 친 거라면면=
                    last = i;
                    goto end;
                }
            }
        }
        t++;
    }
end:
    cout << last;
}

/*
입력 케이스를 끝까지 손으로 풀어보면...

t = 0, rem = 22
1개가 줄었다면 1번 사람이 처음 빵을 집을 것이다.
2개가 줄었다면 2번 사람이 1번 사람이 집은 직후 처음 빵을 집을 것이다.
3개가 줄었다면 3번 사람이 2번 사람이 집은 직후 처음 빵을 집을 것이다.

t = 1, rem = 21
4개가 줄었다면 1번 사람이 빵을 다 먹고, 2개째 빵을 집을 것이다.

t = 2, rem = 20
5개가 줄었다면 1번 사람이 빵을 다 먹고, 3개째 빵을 집을 것이다.

t = 3, rem = 18
6개가 줄었다면 1번 사람이 빵을 다 먹고, 4개째 빵을 집을 것이다.
7개가 줄었다면 2번 사람이 빵을 다 먹고 1번 사람이 집은 직후, 2개째 빵을 집을 것이다.

t = 4, rem = 17
8개가 줄었다면 1번 사람이 빵을 다 먹고, 5개째 빵을 집을 것이다.

t = 5, rem = 15
9개가 줄었다면 1번 사람이 빵을 다 먹고, 6개째 빵을 집을 것이다.
10개가 줄었다면 3번 사람이 빵을 다 먹고 1번 사람이 집은 직후, 2개째 빵을 집을 것이다.

t = 6, rem = 13
11개가 줄었다면 1번 사람이 빵을 다 먹고, 7개째 빵을 집을 것이다.
12개가 줄었다면 2번 사람이 빵을 다 먹고 1번 사람이 집은 직후, 3개째 빵을 집을 것이다.

t = 7, rem = 12
13개가 줄었다면 1번 사람이 빵을 다 먹고, 8개째 빵을 집을 것이다.

t = 8, rem = 11
14개가 줄었다면 1번 사람이 빵을 다 먹고, 9개째 빵을 집을 것이다.

t = 9, rem = 9
15개가 줄었다면 1번 사람이 빵을 다 먹고, 10개째 빵을 집을 것이다.
16개가 줄었다면 2번 사람이 빵을 다 먹고 1번 사람이 집은 직후, 4개째 빵을 집을 것이다.

t = 10, rem = 7
17개가 줄었다면 1번 사람이 빵을 다 먹고, 11개째 빵을 집을 것이다.
18개가 줄었다면 3번 사람이 빵을 다 먹고 1번 사람이 집은 직후, 3개째 빵을 집을 것이다.

t = 11, rem = 6
19개가 줄었다면 1번 사람이 빵을 다 먹고, 12개째 빵을 집을 것이다.

t = 12, rem = 4
20개가 줄었다면 1번 사람이 빵을 다 먹고, 13개째 빵을 집을 것이다.
21개가 줄었다면 2번 사람이 빵을 다 먹고 1번 사람이 집은 직후, 5개째 빵을 집을 것이다.

t = 13, rem = 3
22개가 줄었다면 1번 사람이 빵을 다 먹고, 14개째 빵을 집을 것이다.

t = 14, rem = 2
23개가 줄었다면 1번 사람이 빵을 다 먹고, 15개째 빵을 집을 것이다.

t = 15, rem = -1
24개가 줄었다면 1번 사람이 빵을 다 먹고, 16개째 빵을 집을 것이다.
25개가 줄었다면 2번 사람이 빵을 다 먹고 1번 사람이 집은 직후, 6개째 빵을 집을 것이다.
26개가 줄었다면 3번 사람이 빵을 다 먹고 2번 사람이 집은 직후, 4개째 빵을 집을 것이다.

2번 사람이 빵을 집은 순간 온전한 튀김 소보루가 975개 남았다.
*/